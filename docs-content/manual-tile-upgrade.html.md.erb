---
title: Manually Upgrading a Tile that Contains Variable Migrations
owner: CredHub
---

This topic explains how to upgrade a tile that contains a variable migration when
using Ops Manager as a manifest generator.

See [Migrating Existing Credentials to CredHub](./migrating-credhub-credentials.html)
for more information about variable migrations.

## <a id="about"></a>About the Commit Endpoint

Ops Manager v1.10 introduced the `/commit` API endpoint.
You can use this endpoint to generate deployment manifests for your products.

Sending a request to the `/commit` endpoint mimics the behavior of clicking **Apply Changes** in Ops Manager
but does not initiate a deploy.
The request saves your installation state and generates manifests for your deployed products.
You can use these manifests to manually deploy with BOSH instead of the Ops Manager interface.

Use the following tile upgrade procedure only if you use Ops Manager to generate
manifests that you deploy manually with BOSH.
If you deploy Pivotal Cloud Foundry with Ops Manager, CredHub handles the migration process automatically.

For complete Ops Manager API documentation, browse to `https://OPS-MANAGER-FQDN/docs`,
replacing `OPS-MANAGER-FQDN` with the fully qualified domain name (FQDN) of your Ops Manager instance.

## <a id="commit"></a>Step 1: Commit the Installation

Use the `/commit` endpoint to check for variable migrations in the staged installation.
If you try to upgrade a tile that contains variable migrations, the commit fails.

Enter the following `curl` command to determine whether or not your tile contains migrations:

    $ curl "https://OPS-MANAGER-FQDN/api/v0/staged/installations/commit" \ 
        -X POST \ 
        -H "Authorization: Bearer MY-TOKEN" \ 
        -H "Content-Type: application/json" \ 
        -d '{ "ignore_warnings": true }'

  * Replace `OPS-MANAGER-FQDN` with your Ops Manager FQDN.
  * Replace `MY-TOKEN` with your UAA API access token.
  * Set `ignore_warnings` to `true` to bypass warnings or `false` to enable warnings.

  A successful commit returns the following response:

    HTTP/1.1 200 OK

    { }

  If your the tile does not contain variable migrations, the commit succeeds.
  Continue to the following step to fetch the tile manifest.

  If your tile contains variable migrations, the commit fails and returns an error message
  about the disabled commit endpoint. Continue following this procedure to re-enable the endpoint.

## <a id="fetch-manifest"></a>Step 2: Fetch the Tile Manifest

Enter the following `curl` command to fetch the manifest for the tile:

    $ curl "https://OPS-MANAGER-FQDN/api/v0/deployed/products/PRODUCT-GUID/manifest" \ 
        -X GET \ 
        -H "Authorization: Bearer MY-TOKEN"
  * Replace `PRODUCT-GUID` with the GUID of the product tile.

  A successful request returns the tile manifest, formatted in JSON:
    
    HTTP/1.1 200 OK

    {
      "name": "PRODUCT-NAME",
      "director_uuid": "ignore",
      "releases": [
        {
          "name": "PRODUCT-RELEASE-NAME",
          "version": "PRODUCT-RELEASE-VERSION"
        }
      ],
      "networks": [
        {
          "name": "default",
          "subnets": [
            {
              "range": "192.168.163.0/24",
              "gateway": "192.168.163.2",
              "dns": [
                "192.168.163.3",
                "192.168.163.1"
              ],
    ...
    }

  If your tile does not contain variable migrations, use the manifest to deploy the tile upgrade.

  If your tile contains variable migrations, continue to the following step.

## <a id="pull-creds"></a>Step 3: Fetch Credentials

1. Enter the following `curl` command to request the credentials from the tile in
a format compatible with CredHub:

    ```
    $ curl "https://OPS-MANAGER-FQDN.com/api/v0/staged/products/credhub_credentials" \ 
        -X GET \ 
        -H "Authorization: Bearer MY-TOKEN"
    ```
    
    A successful request returns the credentials from your deployment, formatted as a YAML file:
    
    ```
    HTTP/1.1 200 OK

    RESPONSE HEADERS:
      Content-Type: application/x-yaml; charset=utf-8
    RESPONSE BODY:
    ---
    credentials:
    - name: "/PRODUCT-NAME/PRODUCT-GUID/CREDHUB-SECRET-VARIABLE"
      type: password
      value: EXAMPLE-PASSWORD
    - name: "/PRODUCT-NAME/PRODUCT-GUID/CREDHUB-RSA-VARIABLE"
      type: rsa
      value:
        public_key: |
          -----BEGIN PUBLIC KEY-----
          RSA-PUBLIC-KEY-CONTENTS
          -----END PUBLIC KEY-----
        private_key: |
          -----BEGIN RSA PRIVATE KEY-----
          RSA-PRIVATE-KEY-CONTENTS
          -----END RSA PRIVATE KEY-----
    - name: "/PRODUCT-NAME/PRODUCT-GUID/CREDHUB-SIMPLE-CREDENTIAL-VARIABLE"
      type: user
      value:
        username: EXAMPLE-USERNAME
        password: EXAMPLE-PASSWORD
    ```
    
    <p class="note"><strong>Note</strong>: In the output above, <code>type</code> refers to the
    CredHub variable type rather than the Ops Manager variable type.</p>

1. Migrate the downloaded credentials to CredHub. See the [Bulk Import](http://credhub-api.cfapps.io/#bulk-import) section
of the CredHub API documentation for migration instructions.

## <a id="delete-creds"></a>Step 4: Delete Variable Migrations

Enter the following `curl` command to delete the credential migrations from the tile:

    $ curl "https://OPS-MANAGER-FQDN.com/api/v0/staged/installations/commit" \ 
        -X DELETE \ 
        -H "Authorization: Bearer MY-TOKEN" \

Removing the credential migrations from the tile enables the commit endpoint.
After completing this step, return to [Step 1](#commit) to commit the staged installation
and deploy the tile upgrade.