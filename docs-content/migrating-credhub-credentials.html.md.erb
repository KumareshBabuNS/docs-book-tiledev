---
title: Migrating Existing Credentials to CredHub
owner: CredHub
---

This topic explains how to migrate non-configurable simple secret credentials from your deployment into CredHub. Common simple secrets include blobstore secrets and backup encryption keys.

See [Property Reference](./property-reference.html#secret) for more information about the `secret` credential type.

## Use the JavaScript Migration Process

Tile Authors can write a JavaScript migration to move their existing non-configurable secrets into CredHub. After a successful migration, Ops Manager deletes credentials from installation.yml.

1. In the following code block, replace the example text as follows:
    * `TYPE`: Replace with the property reference that corresponds to the metadata file, such as `properties`. See [Tile Upgrades](/tile-upgrades.html#import) for more information about property reference types.
    * `EXAMPLE-SECRET`: Replace with the name of the key.
    * `SECRET-TO-CREDHUB`: Choose a variable name for the migrated secret.

       ```js
       exports.migrate = function(input) {
         input.variable_migrations.push({
           from: input.properties['.TYPE.EXAMPLE-SECRET'],
           to_variable: 'SECRET-TO-CREDHUB'
         });
         return input;
       };
       ```

1. Save the JavaScript file in the PRODUCT/migrations/v1 directory of your .pivotal tile, following the naming conventions discussed in the [Update Values or Property Names Using JavaScript](./tile-upgrades.html) topic.
 
1. In the metadata file, remove the property blueprint for the secret and add the variable name in its place. In the following example, to migrate the `generated_secret` property to a variable called `encryption_key`, remove the block that includes `name: generated_secret` and `type: secret`.

    ```
    property_blueprints:
      - name: generated_secret
        type: secret
      - name: generated_uuid
        type: uuid
      - name: configured_secret
        type: secret
        configurable: true
        optional: true
      - name: configured_simple_credentials
        type: simple_credentials
        configurable: true
        optional: true
    ```

1. In the `handcraft.yml` located within your metadata, add a variables section for the newly migrated variable.

    ```
    variables:
      - name: ENCRYPTION_KEY
        type: password
    ```
    <p class="note"><strong>Note</strong>: While the property blueprint refers to the above type as <code>secret</code>, BOSH refers to the type as <code>password</code>.</p>
 
1. Edit your manifest so that it requests the variable instead of the property blueprint.

    ```
    secret: (( .TYPE.EXAMPLE-SECRET.SECRET-VALUE ))
    ```

1. Use the double-parenthesis syntax to specify the secret in your manifest snippet.

    ```
    secret: ((( ENCRYPTION_KEY )))
    ```

1. Use an API endpoint to confirm that the credential is stored in the variable. For more information about the endpoint, see [Fetching Variable Names and Values](./get-credhub-vars.html). 
 
