---
title: Migrating Existing Credentials to CredHub
owner: CredHub
---

<p class="note"><strong>Note</strong>: Ops Manager 1.11.1+ supports migrating credentials to CredHub.</p>

This topic explains how to migrate non-configurable `secret` credentials from Ops Manager into CredHub. Common `secret` credentials include blobstore secrets and backup encryption keys.

See [Property Reference](./property-reference.html#secret) for more information about the `secret` credential type.

## Use the JavaScript Migration Process

Tile Authors can write a JavaScript migration to move their existing non-configurable secrets into CredHub. After a successful migration, Ops Manager deletes credentials from installation.yml.

1. Use the following example to write the JavaScript migration.
Save the JavaScript file to the PRODUCT/migrations/v1 directory of your .pivotal tile,
following the naming conventions discussed in the [Update Values or Property Names Using JavaScript](./tile-upgrades.html) topic.

    ```js
    exports.migrate = function(input) {
      input.variable_migrations.push({
        from: input.properties['.TYPE.EXAMPLE-SECRET'],
        to_variable: 'SECRET-VARIABLE'
      });
      return input;
    };
    ```
    In the code block above, replace the example text as follows:
      * `TYPE`: Replace with the property reference that corresponds to the metadata file, such as `properties`. See [Tile Upgrades](./tile-upgrades.html#import) for more information about property reference types.
      * `EXAMPLE-SECRET`: Replace with the name of the key.
      * `SECRET-VARIABLE`: Choose a variable name for the migrated secret.

1. Remove the property blueprint for the secret and replace it with a CredHub variable.
  * In your metadata, remove the block that includes `-name: EXAMPLE-SECRET` and `type: secret`:

        ```
        property_blueprints:
          - name: EXAMPLE-SECRET
            type: secret
          - name: generated_uuid
            type: uuid
          - name: configured_secret
            type: secret
            configurable: true
            optional: true
          - name: configured_simple_credentials
            type: simple_credentials
            configurable: true
            optional: true
        ```
  * In handcraft.yml, add a variables section and include the variable name and type:

        ```
        variables:
          - name: SECRET-VARIABLE
            type: password
        ```
        <p class="note"><strong>Note</strong>: While the property blueprint refers to the above type as <code>secret</code>, BOSH refers to the type as <code>password</code>.</p>

1. In your manifest snippet, replace the existing `secret` value with the new triple-parenthesis syntax.
  * Remove the existing secret from the manifest snippet:

        ```
        secret: (( .TYPE.SECRET-VARIABLE.SECRET-VALUE ))
        ```
  * Add the new CredHub variable to the manifest snippet:

        ```
        secret: ((( SECRET-VARIABLE )))
        ```

1. Run a [test deploy](./development.html#test-errands) of your tile.

1. Use an API endpoint to confirm that the credential is stored in the variable. For more information about the endpoint, see [Fetching Variable Names and Values](./get-credhub-vars.html). 
 
